// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  WAITING
  PENDING
  IN_PROGRESS
  DONE
  TOKEN
  CANCELLED
}

model Brand {
  id         String   @id @default(uuid())
  name       String   @unique
  logo       String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  devices    Device[]
  isFeatured Boolean  @default(false)
  isActive   Boolean  @default(true)
  order      Int      @default(0)
}

model Category {
  id         String   @id @default(uuid())
  name       String   @unique
  image      String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  devices    Device[]
  isFeatured Boolean  @default(false)
  isActive   Boolean  @default(true)
  order      Int      @default(0)
}

model Device {
  id         String     @id @default(uuid())
  name       String     @unique
  image      String?
  brand      Brand      @relation(fields: [brandId], references: [id])
  category   Category   @relation(fields: [categoryId], references: [id])
  categoryId String
  brandId    String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  isActive   Boolean    @default(true)
  isFeatured Boolean    @default(false)
  repairs    Repair[]
  order      Int        @default(0)
  orders     FixOrder[]
}

model Repair {
  id                   String     @id @default(uuid())
  device               Device     @relation(fields: [deviceId], references: [id])
  deviceId             String
  name                 String
  image                String?
  description          String
  buyPrice             Float      @default(0)
  sellPrice            Float      @default(0)
  repairingPrice       Float      @default(0)
  repairingTimeMinutes Int        @default(0)
  quantity             Int
  quality              String
  createdAt            DateTime   @default(now())
  updatedAt            DateTime   @updatedAt
  fixOrders            FixOrder[]
  isActive             Boolean    @default(true)
  order                Int        @default(0)
}

model FixOrder {
  id                String      @id @default(uuid())
  imei              String
  image             String?
  problems          String[]
  repairs           Repair[]
  devices           Device[]
  userNote          String?
  user              User        @relation(fields: [userId], references: [id])
  userId            String
  maintenanceNote   String?
  status            OrderStatus @default(WAITING)
  price             Float
  vat               Float
  discount          Float       @default(0)
  totalPrice        Float
  doneAt            DateTime?
  receivedAt        DateTime?
  cancelledAt       DateTime?
  tokenAt           DateTime?
  expectedDateToFix DateTime?
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
  reference         Int         @default(autoincrement())
  fixes             Fix[]
}

model Fix {
  id                   String   @id @default(uuid())
  name                 String
  price                Float
  order                FixOrder @relation(fields: [orderId], references: [id])
  orderId              String
  repairingTimeMinutes Int      @default(0)
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
}

model User {
  id        String     @id @default(uuid())
  name      String
  email     String     @unique
  password  String
  tel       String
  address   String?
  company   String?
  orgNumber String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  orders    FixOrder[]
}

model Admin {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Subscription {
  id        String   @id @default(uuid())
  email     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Settings {
  id                         String   @id @default(uuid())
  currency                   String
  currencySymbol             String
  vatPercentage              Float
  contactPhone               String?
  contactEmail               String?
  facebook                   String?
  instagram                  String?
  twitter                    String?
  linkedin                   String?
  youtube                    String?
  createdAt                  DateTime @default(now())
  updatedAt                  DateTime @updatedAt
  displayEmailInSeperatePage Boolean  @default(false)
}

model Term {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Review {
  id           String   @id @default(uuid())
  referenceId  String
  author_name  String
  author_image String
  author_email String
  rating       Int
  text         String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  isActive     Boolean  @default(false)
}
